{"version":3,"sources":["actions/appActions.js","Form.jsx","Element.jsx","List.jsx","reducers/rootReducer.js","reducers/appReducer.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD","DELETE","EDIT","connectActionsToProps","addRate","author","comment","rate","type","payload","id","Math","floor","random","editRate","FormConsumer","connect","callback","useState","authorInput","setAuthorInput","rateInput","setRateInput","commentInput","setCommentInput","onSubmit","event","preventDefault","length","rateObject","Number","onChange","target","value","deleteRate","ElementConsumer","isVisibleForm","setIsVisibleForm","toggleElements","prev","formOrButtonElement","onClick","className","ListConsumer","store","rates","ratesElements","map","rootReducer","combineReducers","state","action","currentStateElement","filter","console","warn","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d8dc1bf.chunk.js","sourcesContent":["export const ADD = 'ADD';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\n\r\n// Zamienić nazwy akcji bo nie mogą być potem takie same w innym np ADD_USER\r\n\r\nexport const addRate = ({author, comment, rate}) => ({\r\n  type: ADD,\r\n  payload: {\r\n     author,\r\n     comment,\r\n     id: Math.floor(Math.random() * 1024),\r\n     rate,\r\n  }\r\n})\r\n\r\n\r\n//Stwórz funkcje zwracającą akcje która odejmuje i akcje która umożliwia edycje komentarza.\r\nexport const deleteRate = ({id}) => ({\r\n  type: DELETE,\r\n  payload: {\r\n    id,\r\n  }\r\n})\r\n\r\nexport const editRate = ({ author, comment, id, rate, }) => ({\r\n  type: EDIT,\r\n  payload: {\r\n    id,\r\n    author,\r\n    comment,\r\n    rate,\r\n  }\r\n})\r\n\r\n\r\n// Przykłądowy rodzaj danych w Redux\r\n// {\r\n//   //type jest obowiązkowy a payload opcjonalny\r\n//   type: ADD_RATE,\r\n//   //Ładunek\r\n//   payload: {\r\n//     author: 'Jan Kowalski',\r\n//     rate: 5,\r\n//     comment: 'Bardzo dobra książka',\r\n//   }\r\n// }","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addRate, editRate } from './actions/appActions';\r\n\r\nconst Form = ({\r\n  addRate,\r\n  author = '',\r\n  callback,\r\n  comment = '',\r\n  editRate,\r\n  id,\r\n  rate = 0,\r\n}) => {\r\n\r\n\r\n  const [authorInput, setAuthorInput] = useState(author);\r\n  const [rateInput, setRateInput] = useState(rate);\r\n  const [commentInput, setCommentInput] = useState(comment);\r\n\r\n  const handleChangeAuthor = event => setAuthorInput(event.target.value);\r\n  const handleChangeRate = event => setRateInput(event.target.value);\r\n  const handleChangeComment = event => setCommentInput(event.target.value);\r\n  \r\n  const handleClearInputs = () => {\r\n    setAuthorInput('');\r\n    setRateInput(0);\r\n    setCommentInput('');\r\n  };\r\n\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (!authorInput.length) {\r\n      return;\r\n    }\r\n\r\n    const rateObject = {\r\n      author: authorInput,\r\n      callback,\r\n      comment: commentInput,\r\n      id,\r\n      rate: Number(rateInput),\r\n    };\r\n\r\n    id ? editRate(rateObject) : addRate(rateObject);\r\n\r\n    if (id) {\r\n      callback() \r\n    }\r\n\r\n    handleClearInputs();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <div>\r\n        <label>\r\n          Autor:\r\n          <input\r\n            onChange={handleChangeAuthor}\r\n            type=\"text\"\r\n            value={authorInput}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Ocena:\r\n          <input\r\n            onChange={handleChangeRate}\r\n            type=\"number\"\r\n            value={rateInput}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Komentarz:\r\n          <input\r\n            onChange={handleChangeComment}\r\n            type=\"text\"\r\n            value={commentInput}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">\r\n        {/* Jeśli mieliśmy podane id to na przycisku wyświetli się edytuj */}\r\n        {id ? 'Edycja oceny' : 'Dodano ocene'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst connectActionsToProps = ({\r\n  addRate,\r\n  editRate,\r\n})\r\n\r\nconst FormConsumer = connect(null, connectActionsToProps)(Form);\r\n\r\nexport default FormConsumer;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from './Form';\r\n\r\nimport { deleteRate } from './actions/appActions';\r\n\r\nimport './styles/Element.css';\r\n\r\nconst Element = ({author, comment, rate, id, deleteRate }) => {\r\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\r\n\r\n  const toggleElements = () => setIsVisibleForm(prev => !prev); \r\n \r\n  const rateObject = { id };\r\n  \r\n  const formOrButtonElement = isVisibleForm \r\n  ? (\r\n    <Form \r\n      author = {author}\r\n      callback = {toggleElements}\r\n      comment = {comment}\r\n      id={id}\r\n      rate = {rate}\r\n     />\r\n  ) : (\r\n    <>\r\n    <button onClick={toggleElements}>Edytuj</button>\r\n    </> \r\n  )\r\n\r\n  const handleDelete = () => { deleteRate(rateObject) };\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <p>Autor oceny: {author}.</p>\r\n      <p>Komentarz: {comment}.</p>\r\n      <p>Ocena: {rate}/5.</p>\r\n      {formOrButtonElement}\r\n      <button onClick={handleDelete}>Usuń</button>  \r\n    </li>\r\n  );\r\n};\r\n\r\nconst connectActionsToProps = ({ deleteRate });\r\n\r\nconst ElementConsumer = connect(null, connectActionsToProps)(Element);\r\n\r\nexport default ElementConsumer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Element from './Element';\r\n\r\nconst List = ({rates}) => {\r\n  const ratesElements = rates.map(rate => <Element \r\n    key={rate.id} \r\n    {...rate}\r\n  />)\r\n\r\n  return (\r\n    <ul>\r\n      {ratesElements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst connectReduxStateToProps = store => ({\r\n  rates: store.rates,\r\n})\r\n\r\nconst ListConsumer = connect(connectReduxStateToProps)(List);\r\n\r\nexport default ListConsumer;","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './appReducer.js';\r\n\r\nexport const rootReducer = combineReducers({\r\n  rates: appReducer,\r\n});","import {\r\n  ADD, EDIT, DELETE,\r\n} from '../actions/appActions';\r\n\r\nexport const appReducer = ( state=[], action ) => {\r\n\r\n  switch (action.type) {\r\n    \r\n    case ADD:\r\n      return [ ...state, action.payload];\r\n\r\n    case EDIT:\r\n      return state.map( currentStateElement => {\r\n        if (currentStateElement.id !== action.payload.id) {\r\n          return currentStateElement\r\n        }\r\n\r\n        const { author, comment, rate } = action.payload;\r\n\r\n        return ({\r\n          author,\r\n          comment,\r\n          rate,\r\n          id: currentStateElement.id,\r\n\r\n        });\r\n      });\r\n\r\n    case DELETE:\r\n      return state.filter(currentStateElement => currentStateElement.id !== action.payload.id);\r\n\r\n    default:\r\n      console.warn(`Nie mamy akcji typu: ${action.type}`);\r\n      return state;\r\n  };\r\n};\r\n\r\n","import { createStore } from 'redux';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Form from './Form'\nimport List from './List'\n\nimport store from './store/store'\n\nimport './styles/App.css';\n\n// drugi store\n// commit 1: Udało się stworzyć do btn do usuwania, aczkolwiek działą prawidłowo w konsoli, ale nie zmienia nic w ui\n// commit 2: Udało się!!! stworzyliśmy przycisk który działa!!! 21may2021!!! we are the champions!\n// commit 3: Wyczyściliśmy inputy po dodaniu. Dodać rzeczy z commit 1, plus input do opisu książki, i wyciemniony tekst w inputie typu \"wpisz autora\".\n\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        <div className=\"ui\">\n          <h1>Czytelnia Fantasy</h1>\n          <p>Literatura fantasy mistrza gry.</p>\n          <Form />\n          <List />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}