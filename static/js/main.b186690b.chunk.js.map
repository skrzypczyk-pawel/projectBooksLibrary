{"version":3,"sources":["actions/appActions.js","Form.jsx","Element.jsx","List.jsx","reducers/rootReducer.js","reducers/appReducer.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD","DELETE","EDIT","connectActionsToProps","addRate","author","comment","rate","title","type","payload","id","Math","floor","random","editRate","FormConsumer","connect","callback","useState","titleInput","setTitleInput","authorInput","setAuthorInput","rateInput","setRateInput","commentInput","setCommentInput","onSubmit","event","preventDefault","length","rateObject","onChange","target","value","placeholder","deleteRate","ElementConsumer","isVisibleForm","setIsVisibleForm","toggleElements","prev","formOrButtonElement","onClick","handleRateColor","console","log","className","style","color","ListConsumer","store","rates","ratesElements","map","rootReducer","combineReducers","state","action","currentStateElement","filter","warn","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b186690b.chunk.js","sourcesContent":["export const ADD = 'ADD';\r\nexport const DELETE = 'DELETE';\r\nexport const EDIT = 'EDIT';\r\n\r\n// Zamienić nazwy akcji bo nie mogą być potem takie same w innym np ADD_USER\r\n\r\nexport const addRate = ({author, comment, rate, title}) => ({\r\n  type: ADD,\r\n  payload: {\r\n     title,\r\n     author,\r\n     comment,\r\n     id: Math.floor(Math.random() * 1024),\r\n     rate,\r\n  }\r\n})\r\n\r\n\r\n//Stwórz funkcje zwracającą akcje która odejmuje i akcje która umożliwia edycje komentarza.\r\nexport const deleteRate = ({id}) => ({\r\n  type: DELETE,\r\n  payload: {\r\n    id,\r\n  }\r\n})\r\n\r\nexport const editRate = ({ author, comment, id, rate, title }) => ({\r\n  type: EDIT,\r\n  payload: {\r\n    author,\r\n    comment,\r\n    id,\r\n    rate,\r\n    title,\r\n  }\r\n})\r\n\r\n\r\n// Przykłądowy rodzaj danych w Redux\r\n// {\r\n//   //type jest obowiązkowy a payload opcjonalny\r\n//   type: ADD_RATE,\r\n//   //Ładunek\r\n//   payload: {\r\n//     author: 'Jan Kowalski',\r\n//     rate: 5,\r\n//     comment: 'Bardzo dobra książka',\r\n//   }\r\n// }","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addRate, editRate } from './actions/appActions';\r\n\r\nconst Form = ({\r\n  addRate,\r\n  author = '',\r\n  callback,\r\n  comment = '',\r\n  editRate,\r\n  id,\r\n  rate = '',\r\n  title = '',\r\n}) => {\r\n\r\n  const [titleInput, setTitleInput] = useState(title);\r\n  const [authorInput, setAuthorInput] = useState(author);\r\n  const [rateInput, setRateInput] = useState(rate);\r\n  const [commentInput, setCommentInput] = useState(comment);\r\n\r\n  const handleChangeTitle = event => setTitleInput(event.target.value);\r\n  const handleChangeAuthor = event => setAuthorInput(event.target.value);\r\n  const handleChangeRate = event => setRateInput(event.target.value);\r\n  const handleChangeComment = event => setCommentInput(event.target.value);\r\n  \r\n  const handleClearInputs = () => {\r\n    setTitleInput('');\r\n    setAuthorInput('');\r\n    setRateInput('');\r\n    setCommentInput('');\r\n  };\r\n\r\n  const handleOnSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (!authorInput.length) {\r\n      return;\r\n    }\r\n\r\n    if (!titleInput.length) {\r\n      return;\r\n    }\r\n\r\n    const rateObject = {\r\n      author: authorInput,\r\n      callback,\r\n      comment: commentInput,\r\n      id,\r\n      rate: rateInput,\r\n      title: titleInput,\r\n    };\r\n\r\n    id ? editRate(rateObject) : addRate(rateObject);\r\n\r\n    if (id) {\r\n      callback() \r\n    }\r\n\r\n    handleClearInputs();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <div>\r\n      <label>\r\n          <input\r\n            onChange={handleChangeTitle}\r\n            type=\"text\"\r\n            value={titleInput}\r\n            placeholder=\"Podaj Tytuł\"\r\n          />\r\n        </label>\r\n      </div>\r\n       <div>\r\n        <label>\r\n          <input\r\n            onChange={handleChangeAuthor}\r\n            type=\"text\"\r\n            value={authorInput}\r\n            placeholder=\"Podaj autora\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            onChange={handleChangeRate}\r\n            type=\"text\"\r\n            value={rateInput}\r\n            placeholder=\"Podaj ocene od 1 do 5\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            onChange={handleChangeComment}\r\n            type=\"text\"\r\n            value={commentInput}\r\n            placeholder=\"Wpisz komentarz\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <button type=\"submit\">\r\n        {/* Jeśli mieliśmy podane id to na przycisku wyświetli się edytuj */}\r\n        {id ? 'Edycja oceny' : 'Dodaj'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst connectActionsToProps = ({\r\n  addRate,\r\n  editRate,\r\n})\r\n\r\nconst FormConsumer = connect(null, connectActionsToProps)(Form);\r\n\r\nexport default FormConsumer;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from './Form';\r\n\r\nimport { deleteRate } from './actions/appActions';\r\n\r\nimport './styles/Element.css';\r\n\r\nconst Element = ({author, comment, deleteRate, id, rate, title  }) => {\r\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\r\n\r\n  const toggleElements = () => setIsVisibleForm(prev => !prev); \r\n \r\n  const rateObject = { id };\r\n  \r\n  const formOrButtonElement = isVisibleForm \r\n  ? (\r\n    <Form \r\n      author = {author}\r\n      callback = {toggleElements}\r\n      comment = {comment}\r\n      id={id}\r\n      rate = {rate}\r\n      title = {title}\r\n     />\r\n  ) : (\r\n    <>\r\n    <button onClick={toggleElements}>Edytuj</button>\r\n    </> \r\n  )\r\n\r\n  const handleDelete = () => { deleteRate(rateObject) };\r\n  \r\n  const handleRateColor = (rate) => {\r\n    if(rate === 1) {\r\n      return \"red\";\r\n    }\r\n    if (rate === 2) {\r\n      return \"orange\";\r\n    }\r\n    else if(rate === 3) {\r\n      return \"yellow\";\r\n    } else {\r\n      return \"green\";\r\n    }\r\n    \r\n  }\r\n  console.log(rate);\r\n  console.log(handleRateColor());\r\n\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <p>Tytuł: {title}.</p>\r\n      <p>Autor książki: {author}.</p>\r\n      <p>Komentarz: {comment}.</p>\r\n      <div \r\n      className=\"rate\"\r\n      style={{color: `${handleRateColor()}`}}\r\n      ><p>{rate}/5</p></div>\r\n      {formOrButtonElement}\r\n      <button onClick={handleDelete}>Usuń</button>  \r\n    </li>\r\n  );\r\n};\r\n\r\nconst connectActionsToProps = ({ deleteRate });\r\n\r\nconst ElementConsumer = connect(null, connectActionsToProps)(Element);\r\n\r\nexport default ElementConsumer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Element from './Element';\r\n\r\nconst List = ({rates}) => {\r\n  const ratesElements = rates.map(rate => <Element \r\n    key={rate.id} \r\n    {...rate}\r\n  />)\r\n\r\n  return (\r\n    <ul>\r\n      {ratesElements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst connectReduxStateToProps = store => ({\r\n  rates: store.rates,\r\n})\r\n\r\nconst ListConsumer = connect(connectReduxStateToProps)(List);\r\n\r\nexport default ListConsumer;","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './appReducer.js';\r\n\r\nexport const rootReducer = combineReducers({\r\n  rates: appReducer,\r\n});","import {\r\n  ADD, EDIT, DELETE,\r\n} from '../actions/appActions';\r\n\r\nexport const appReducer = ( state=[], action ) => {\r\n\r\n  switch (action.type) {\r\n    \r\n    case ADD:\r\n      return [ ...state, action.payload];\r\n\r\n    case EDIT:\r\n      return state.map( currentStateElement => {\r\n        if (currentStateElement.id !== action.payload.id) {\r\n          return currentStateElement\r\n        }\r\n\r\n        const { author, comment, rate, title } = action.payload;\r\n\r\n        return ({\r\n          author,\r\n          comment,\r\n          id: currentStateElement.id,\r\n          rate,\r\n          title,\r\n        });\r\n      });\r\n\r\n    case DELETE:\r\n      return state.filter(currentStateElement => currentStateElement.id !== action.payload.id);\r\n\r\n    default:\r\n      console.warn(`Nie mamy akcji typu: ${action.type}`);\r\n      return state;\r\n  };\r\n};\r\n\r\n","import { createStore } from 'redux';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Form from './Form'\nimport List from './List'\n\nimport store from './store/store'\n\nimport './styles/App.css';\n\n// drugi store\n// commit 1: Udało się stworzyć do btn do usuwania, aczkolwiek działą prawidłowo w konsoli, ale nie zmienia nic w ui\n// commit 2: Udało się!!! stworzyliśmy przycisk który działa!!! 21may2021!!! we are the champions!\n// commit 3: Wyczyściliśmy inputy po dodaniu. Dodać rzeczy z commit 1, plus input do opisu książki, i wyciemniony tekst w inputie typu \"wpisz autora\".\n\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        <div className=\"ui\">\n          <h1>Twoja biblioteka</h1>\n          <p>Dodaj swoje ulubione tytuły, oceń je, napisz komentarz i krótki opis, ułatwi Ci to polecenie twoich ulubionych pozycji!</p>\n          <Form />\n          <List />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}